# Gołąb Contact Form API - Environment Variables Example
# Copy this file to .env.local for local development

# Target email address where contact form messages will be sent
TARGET_EMAIL=your-email@example.com

# From email address for outgoing messages (must match your verified domain in Resend)
FROM_EMAIL="Gołąb Contact Form <noreply@yourdomain.com>"

# Resend API key (get from https://resend.com)
RESEND_API_KEY="re_xxxxxxxxxxxxxxxxxxxxxxxxxx"

# Allowed origins for CORS (comma-separated, or "*" for all)
ALLOWED_ORIGINS="https://yourportfolio.com,https://www.example.com"

# For local development, you can use:
# ALLOWED_ORIGINS=*

# Enable auto-reply feature (optional, defaults to disabled)
# Set to "true" to send automatic thank you emails to form senders
ENABLE_AUTO_REPLY=false

# Auto-reply from email address (optional, defaults to FROM_EMAIL)
# If set, auto-reply emails will be sent from this address instead of FROM_EMAIL
# Must use the same format as FROM_EMAIL and match your verified domain in Resend
# Example: "Auto Reply <autoreply@yourdomain.com>"
AUTO_REPLY_FROM_EMAIL=

# Banned words filter (optional, leave empty to disable)
# Semicolon-separated list of words to block in contact form submissions
# Checks email, subject, and message content (case-insensitive)
# Example: "spam;badword;casino;lottery"
BANNED_WORDS=

# API Key for additional security (optional, leave empty to disable)
# If set, clients must send this key in the X-API-Key header to access /api/contact
# Generate a secure API key using OpenSSL:
# openssl rand -base64 32
# Example result: "Kx7vQ2mR8nP5wL9sT3uY6bN1cF4hJ0eA2dG8iM7oS5k="
API_KEY=

# Email filtering (optional, leave empty to disable)
# Priority: Whitelist Domains < Blacklist Domains < Blacklist Emails
# If whitelist is empty, all domains are allowed (unless blacklisted)
# If whitelist is not empty, only whitelisted domains are allowed (unless overridden by blacklists)

# Email domain whitelist (semicolon-separated, exact domain matching)
# Example: "yourdomain.com;trusted.org;partner.net"
EMAIL_DOMAIN_WHITELIST=

# Email domain blacklist (semicolon-separated, exact domain matching)
# Example: "spam.com;malicious.net;badactor.org"
EMAIL_DOMAIN_BLACKLIST=

# Email address blacklist (semicolon-separated, full email addresses)
# Example: "spammer@example.com;bad@domain.com;spam@anywhere.net"
EMAIL_ADDRESS_BLACKLIST=

# ========================================
# VALIDATION LIMITS (Build-time Configuration)
# ========================================
# IMPORTANT: These variables are read at BUILD TIME for optimal performance.
# Changes require a rebuild/restart to take effect.

# Subject maximum length (optional, default: 200)
# Must be a positive integer >= 1
# WARNING: Values > 200 may impact performance and increase spam risk
# Example: SUBJECT_MAX_LENGTH=150
SUBJECT_MAX_LENGTH=

# Message minimum length (optional, default: 10)
# Must be a positive integer >= 1
# WARNING: Values < 10 may reduce spam protection effectiveness
# Example: MESSAGE_MIN_LENGTH=20
MESSAGE_MIN_LENGTH=

# Message maximum length (optional, default: 5000)
# Must be a positive integer >= 1
# WARNING: Values > 5000 may impact performance and increase spam risk
# Example: MESSAGE_MAX_LENGTH=10000
MESSAGE_MAX_LENGTH=

# NOTE: Email maximum length is fixed at 320 characters (RFC 5321 standard)
# and cannot be configured via environment variables.

# ========================================
# RATE LIMITING CONFIGURATION (Build-time + Runtime)
# ========================================
# IMPORTANT: RATE_LIMITING is read at BUILD TIME for optimal performance.
# Changes require a rebuild/restart to take effect.

# Enable/disable rate limiting (build-time, default: false)
# Set to "true" to enable rate limiting with Upstash Redis
RATE_LIMITING=false

# Upstash Redis connection (required when RATE_LIMITING=true)
# Get these from your Upstash Redis dashboard: https://console.upstash.com/
UPSTASH_REDIS_REST_URL=https://your-redis-instance.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-redis-token

# ========================================
# GLOBAL RATE LIMITING
# ========================================
# Limits total successful emails across all users
# Default: enabled with 10 emails per hour

# Enable global rate limiting (default: true when RATE_LIMITING=true)
RATE_LIMIT_GLOBAL_ENABLED=true

# Maximum emails allowed globally (default: 10)
RATE_LIMIT_GLOBAL_LIMIT=10

# Time window in seconds (default: 3600 = 1 hour)
RATE_LIMIT_GLOBAL_WINDOW=3600

# ========================================
# PER-IP RATE LIMITING
# ========================================
# Limits successful emails per IP address
# Default: disabled (useful for proxy/backend scenarios)
# Uses CF-Connecting-IP header for real IP detection

# Enable per-IP rate limiting (default: false)
RATE_LIMIT_IP_ENABLED=false

# Maximum emails allowed per IP (default: 5)
RATE_LIMIT_IP_LIMIT=5

# Time window in seconds (default: 3600 = 1 hour)
RATE_LIMIT_IP_WINDOW=3600

# ========================================
# PER-EMAIL RATE LIMITING
# ========================================
# Limits successful emails per sender email address
# Default: enabled with 1 email per hour

# Enable per-email rate limiting (default: true when RATE_LIMITING=true)
RATE_LIMIT_EMAIL_ENABLED=true

# Maximum emails allowed per email address (default: 1)
RATE_LIMIT_EMAIL_LIMIT=1

# Time window in seconds (default: 3600 = 1 hour)
RATE_LIMIT_EMAIL_WINDOW=3600

# ========================================
# REDIS FAILURE HANDLING (Build-time Configuration)
# ========================================
# Controls behavior when Redis is unavailable during rate limiting
# IMPORTANT: This is read at BUILD TIME. Changes require rebuild/restart.

# Redis failure mode (default: "open")
# "open" = Allow requests when Redis fails (fail-open, current default behavior)
# "closed" = Block requests when Redis fails (fail-closed, more secure but less available)
RATE_LIMIT_REDIS_FAILURE_MODE=open

# ========================================
# RATE LIMITING NOTES
# ========================================
# - Rate limiting only counts SUCCESSFUL email sends (not failed attempts)
# - Auto-reply emails do not count toward rate limits
# - Each rate limit type can be independently enabled/disabled
# - Redis failure behavior is configurable via RATE_LIMIT_REDIS_FAILURE_MODE
# - IP detection prioritizes CF-Connecting-IP header for real user IP
# - Time windows are sliding windows based on current timestamp
